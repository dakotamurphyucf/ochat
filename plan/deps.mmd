%% Auto-generated â€“ edit via script/dep_graph_generator.ml
graph TD
  lib_angstrom(["angstrom"])
  lib_apply_patch_test(["apply_patch_test"])
  lib_asn1-combinators(["asn1-combinators"])
  lib_astring(["astring"])
  lib_base(["base"])
  lib_base.base_internalhash_types(["base.base_internalhash_types"])
  lib_base.md5(["base.md5"])
  lib_base.shadow_stdlib(["base.shadow_stdlib"])
  lib_base64(["base64"])
  lib_base64.rfc2045(["base64.rfc2045"])
  lib_base_bigstring(["base_bigstring"])
  lib_base_quickcheck(["base_quickcheck"])
  lib_base_quickcheck.ppx_quickcheck.runtime(["base_quickcheck.ppx_quickcheck.runtime"])
  lib_bigarray-compat(["bigarray-compat"])
  lib_bigarray-overlap(["bigarray-overlap"])
  lib_bigstringaf(["bigstringaf"])
  lib_bimage(["bimage"])
  lib_bimage-unix(["bimage-unix"])
  lib_bin_prot(["bin_prot"])
  lib_bin_prot.shape(["bin_prot.shape"])
  lib_bytes(["bytes"])
  lib_camlp-streams(["camlp-streams"])
  lib_camlzip(["camlzip"])
  lib_chat_response_cache_test(["chat_response_cache_test"])
  lib_chat_response_converter_test(["chat_response_converter_test"])
  lib_chat_tui_cmdline_mode_test(["chat_tui_cmdline_mode_test"])
  lib_chat_tui_command_mode_test(["chat_tui_command_mode_test"])
  lib_chat_tui_normal_mode_cursor_test(["chat_tui_normal_mode_cursor_test"])
  lib_chat_tui_undo_test(["chat_tui_undo_test"])
  lib_chatgpt.apply_patch(["chatgpt.apply_patch"])
  lib_chatgpt.bin_prot_utils_eio(["chatgpt.bin_prot_utils_eio"])
  lib_chatgpt.bm25(["chatgpt.bm25"])
  lib_chatgpt.chat_completion(["chatgpt.chat_completion"])
  lib_chatgpt.chat_response(["chatgpt.chat_response"])
  lib_chatgpt.chat_tui(["chatgpt.chat_tui"])
  lib_chatgpt.chatmd(["chatgpt.chatmd"])
  lib_chatgpt.chatml(["chatgpt.chatml"])
  lib_chatgpt.chatml_builtin_modules(["chatgpt.chatml_builtin_modules"])
  lib_chatgpt.chatml_resolver(["chatgpt.chatml_resolver"])
  lib_chatgpt.chatml_typechecker(["chatgpt.chatml_typechecker"])
  lib_chatgpt.definitions(["chatgpt.definitions"])
  lib_chatgpt.doc(["chatgpt.doc"])
  lib_chatgpt.dune_describe(["chatgpt.dune_describe"])
  lib_chatgpt.embed_service(["chatgpt.embed_service"])
  lib_chatgpt.environment(["chatgpt.environment"])
  lib_chatgpt.filter_file(["chatgpt.filter_file"])
  lib_chatgpt.functions(["chatgpt.functions"])
  lib_chatgpt.github(["chatgpt.github"])
  lib_chatgpt.gpt_function(["chatgpt.gpt_function"])
  lib_chatgpt.indexer(["chatgpt.indexer"])
  lib_chatgpt.io(["chatgpt.io"])
  lib_chatgpt.jsonaf_ext(["chatgpt.jsonaf_ext"])
  lib_chatgpt.log(["chatgpt.log"])
  lib_chatgpt.lru_cache(["chatgpt.lru_cache"])
  lib_chatgpt.markdown_crawler(["chatgpt.markdown_crawler"])
  lib_chatgpt.markdown_indexer(["chatgpt.markdown_indexer"])
  lib_chatgpt.markdown_snippet(["chatgpt.markdown_snippet"])
  lib_chatgpt.mcp_client(["chatgpt.mcp_client"])
  lib_chatgpt.mcp_prompt_agent(["chatgpt.mcp_prompt_agent"])
  lib_chatgpt.mcp_server_core(["chatgpt.mcp_server_core"])
  lib_chatgpt.mcp_server_http(["chatgpt.mcp_server_http"])
  lib_chatgpt.mcp_server_router(["chatgpt.mcp_server_router"])
  lib_chatgpt.mcp_tool(["chatgpt.mcp_tool"])
  lib_chatgpt.mcp_transport(["chatgpt.mcp_transport"])
  lib_chatgpt.mcp_types(["chatgpt.mcp_types"])
  lib_chatgpt.md_index_catalog(["chatgpt.md_index_catalog"])
  lib_chatgpt.merlin(["chatgpt.merlin"])
  lib_chatgpt.mime(["chatgpt.mime"])
  lib_chatgpt.notty_eio(["chatgpt.notty_eio"])
  lib_chatgpt.notty_scroll_box(["chatgpt.notty_scroll_box"])
  lib_chatgpt.oauth2(["chatgpt.oauth2"])
  lib_chatgpt.ocaml_parser(["chatgpt.ocaml_parser"])
  lib_chatgpt.odoc_crawler(["chatgpt.odoc_crawler"])
  lib_chatgpt.odoc_indexer(["chatgpt.odoc_indexer"])
  lib_chatgpt.odoc_snippet(["chatgpt.odoc_snippet"])
  lib_chatgpt.openai(["chatgpt.openai"])
  lib_chatgpt.package_index(["chatgpt.package_index"])
  lib_chatgpt.roof_lp(["chatgpt.roof_lp"])
  lib_chatgpt.roof_schedule_engine(["chatgpt.roof_schedule_engine"])
  lib_chatgpt.roof_schedule_engine_dispatch(["chatgpt.roof_schedule_engine_dispatch"])
  lib_chatgpt.roof_schedule_printer(["chatgpt.roof_schedule_printer"])
  lib_chatgpt.roof_section_scheduler(["chatgpt.roof_section_scheduler"])
  lib_chatgpt.source(["chatgpt.source"])
  lib_chatgpt.template(["chatgpt.template"])
  lib_chatgpt.tikitoken(["chatgpt.tikitoken"])
  lib_chatgpt.ttl_lru_cache(["chatgpt.ttl_lru_cache"])
  lib_chatgpt.vector_db(["chatgpt.vector_db"])
  lib_chatgpt.webpage_markdown(["chatgpt.webpage_markdown"])
  lib_chatmd_parser_test(["chatmd_parser_test"])
  lib_chatml_runtime_test(["chatml_runtime_test"])
  lib_chatml_typechecker_test(["chatml_typechecker_test"])
  lib_cohttp(["cohttp"])
  lib_cohttp-eio(["cohttp-eio"])
  lib_compiler-libs(["compiler-libs"])
  lib_compiler-libs.common(["compiler-libs.common"])
  lib_core(["core"])
  lib_core.base_for_tests(["core.base_for_tests"])
  lib_core.command(["core.command"])
  lib_core.filename_base(["core.filename_base"])
  lib_core.heap_block(["core.heap_block"])
  lib_core.univ_map(["core.univ_map"])
  lib_core.validate(["core.validate"])
  lib_core_kernel.caml_threads(["core_kernel.caml_threads"])
  lib_core_kernel.caml_unix(["core_kernel.caml_unix"])
  lib_core_kernel.flags(["core_kernel.flags"])
  lib_core_kernel.version_util(["core_kernel.version_util"])
  lib_core_unix(["core_unix"])
  lib_core_unix.bigstring_unix(["core_unix.bigstring_unix"])
  lib_core_unix.command_unix(["core_unix.command_unix"])
  lib_core_unix.core_thread(["core_unix.core_thread"])
  lib_core_unix.error_checking_mutex(["core_unix.error_checking_mutex"])
  lib_core_unix.ocaml_c_utils(["core_unix.ocaml_c_utils"])
  lib_core_unix.signal_unix(["core_unix.signal_unix"])
  lib_core_unix.sys_unix(["core_unix.sys_unix"])
  lib_core_unix.time_float_unix(["core_unix.time_float_unix"])
  lib_core_unix.time_ns_unix(["core_unix.time_ns_unix"])
  lib_csexp(["csexp"])
  lib_cstruct(["cstruct"])
  lib_ctypes(["ctypes"])
  lib_ctypes-foreign(["ctypes-foreign"])
  lib_ctypes.stubs(["ctypes.stubs"])
  lib_digestif(["digestif"])
  lib_domain-local-await(["domain-local-await"])
  lib_domain-name(["domain-name"])
  lib_duration(["duration"])
  lib_eio(["eio"])
  lib_eio-ssl(["eio-ssl"])
  lib_eio.core(["eio.core"])
  lib_eio.mock(["eio.mock"])
  lib_eio.runtime_events(["eio.runtime_events"])
  lib_eio.unix(["eio.unix"])
  lib_eio.utils(["eio.utils"])
  lib_eio_main(["eio_main"])
  lib_eio_posix(["eio_posix"])
  lib_eqaf(["eqaf"])
  lib_expect_test_helpers_core(["expect_test_helpers_core"])
  lib_expect_test_helpers_core.expect_test_helpers_base(["expect_test_helpers_core.expect_test_helpers_base"])
  lib_ezgzip(["ezgzip"])
  lib_faraday(["faraday"])
  lib_fieldslib(["fieldslib"])
  lib_filter_file_test(["filter_file_test"])
  lib_fmt(["fmt"])
  lib_fmt.tty(["fmt.tty"])
  lib_gel(["gel"])
  lib_gluten(["gluten"])
  lib_gluten-eio(["gluten-eio"])
  lib_gmap(["gmap"])
  lib_h2(["h2"])
  lib_h2-eio(["h2-eio"])
  lib_hmap(["hmap"])
  lib_hpack(["hpack"])
  lib_http(["http"])
  lib_httpun(["httpun"])
  lib_httpun-eio(["httpun-eio"])
  lib_httpun-types(["httpun-types"])
  lib_httpun-ws(["httpun-ws"])
  lib_int_repr(["int_repr"])
  lib_integers(["integers"])
  lib_iomux(["iomux"])
  lib_ipaddr(["ipaddr"])
  lib_jane-street-headers(["jane-street-headers"])
  lib_jane_rope(["jane_rope"])
  lib_jsonaf(["jsonaf"])
  lib_jsonaf.kernel(["jsonaf.kernel"])
  lib_kdf.hkdf(["kdf.hkdf"])
  lib_kdf.pbkdf(["kdf.pbkdf"])
  lib_ke(["ke"])
  lib_lambdasoup(["lambdasoup"])
  lib_logs(["logs"])
  lib_logs.fmt(["logs.fmt"])
  lib_logs.threaded(["logs.threaded"])
  lib_lp(["lp"])
  lib_lp-glpk(["lp-glpk"])
  lib_lp-glpk.bindings(["lp-glpk.bindings"])
  lib_lp-glpk.bindings.consts(["lp-glpk.bindings.consts"])
  lib_lp-glpk.bindings.types(["lp-glpk.bindings.types"])
  lib_lp-glpk.consts(["lp-glpk.consts"])
  lib_lp-glpk.ffi(["lp-glpk.ffi"])
  lib_lp-glpk.types(["lp-glpk.types"])
  lib_lwd(["lwd"])
  lib_lwt(["lwt"])
  lib_lwt-dllist(["lwt-dllist"])
  lib_lwt.unix(["lwt.unix"])
  lib_lwt_eio(["lwt_eio"])
  lib_macaddr(["macaddr"])
  lib_magic-mime(["magic-mime"])
  lib_markdown_crawler_test(["markdown_crawler_test"])
  lib_markdown_indexing_test(["markdown_indexing_test"])
  lib_markup(["markup"])
  lib_mcp_client_http_test(["mcp_client_http_test"])
  lib_mcp_client_test(["mcp_client_test"])
  lib_mcp_server_integration_test(["mcp_server_integration_test"])
  lib_mcp_transport_http_sse_test(["mcp_transport_http_sse_test"])
  lib_mcp_transport_http_test(["mcp_transport_http_test"])
  lib_mcp_transport_stdio_test(["mcp_transport_stdio_test"])
  lib_menhirLib(["menhirLib"])
  lib_mirage-crypto(["mirage-crypto"])
  lib_mirage-crypto-ec(["mirage-crypto-ec"])
  lib_mirage-crypto-pk(["mirage-crypto-pk"])
  lib_mirage-crypto-rng(["mirage-crypto-rng"])
  lib_mirage-crypto-rng-eio(["mirage-crypto-rng-eio"])
  lib_mirage-crypto-rng.unix(["mirage-crypto-rng.unix"])
  lib_mtime(["mtime"])
  lib_mtime.clock(["mtime.clock"])
  lib_mtime.clock.os(["mtime.clock.os"])
  lib_nottui(["nottui"])
  lib_nottui-pretty(["nottui-pretty"])
  lib_notty(["notty"])
  lib_notty.unix(["notty.unix"])
  lib_npy(["npy"])
  lib_oauth_dynamic_registration_test(["oauth_dynamic_registration_test"])
  lib_ocaml-compiler-libs.common(["ocaml-compiler-libs.common"])
  lib_ocaml-compiler-libs.shadow(["ocaml-compiler-libs.shadow"])
  lib_ocaml_intrinsics_kernel(["ocaml_intrinsics_kernel"])
  lib_ocplib-endian(["ocplib-endian"])
  lib_ocplib-endian.bigstring(["ocplib-endian.bigstring"])
  lib_ohex(["ohex"])
  lib_omd(["omd"])
  lib_optint(["optint"])
  lib_owl(["owl"])
  lib_owl-base(["owl-base"])
  lib_parsexp(["parsexp"])
  lib_path_glob(["path_glob"])
  lib_pcre(["pcre"])
  lib_pecu(["pecu"])
  lib_piaf(["piaf"])
  lib_piaf.multipart(["piaf.multipart"])
  lib_piaf.multipart_form(["piaf.multipart_form"])
  lib_piaf.sendfile(["piaf.sendfile"])
  lib_piaf.stream(["piaf.stream"])
  lib_ppx_assert.runtime-lib(["ppx_assert.runtime-lib"])
  lib_ppx_bench.runtime-lib(["ppx_bench.runtime-lib"])
  lib_ppx_compare.runtime-lib(["ppx_compare.runtime-lib"])
  lib_ppx_derivers(["ppx_derivers"])
  lib_ppx_diff.diffable(["ppx_diff.diffable"])
  lib_ppx_diff.diffable_cinaps(["ppx_diff.diffable_cinaps"])
  lib_ppx_enumerate.runtime-lib(["ppx_enumerate.runtime-lib"])
  lib_ppx_expect.config(["ppx_expect.config"])
  lib_ppx_expect.config_types(["ppx_expect.config_types"])
  lib_ppx_expect.make_corrected_file(["ppx_expect.make_corrected_file"])
  lib_ppx_expect.runtime(["ppx_expect.runtime"])
  lib_ppx_hash.runtime-lib(["ppx_hash.runtime-lib"])
  lib_ppx_here.runtime-lib(["ppx_here.runtime-lib"])
  lib_ppx_inline_test.config(["ppx_inline_test.config"])
  lib_ppx_inline_test.runtime-lib(["ppx_inline_test.runtime-lib"])
  lib_ppx_jsonaf_conv.runtime-lib(["ppx_jsonaf_conv.runtime-lib"])
  lib_ppx_log.syntax(["ppx_log.syntax"])
  lib_ppx_log.types(["ppx_log.types"])
  lib_ppx_module_timer.runtime(["ppx_module_timer.runtime"])
  lib_ppx_sexp_conv.runtime-lib(["ppx_sexp_conv.runtime-lib"])
  lib_ppx_stable_witness.runtime(["ppx_stable_witness.runtime"])
  lib_ppx_stable_witness.stable_witness(["ppx_stable_witness.stable_witness"])
  lib_ppx_string.runtime(["ppx_string.runtime"])
  lib_ppxlib(["ppxlib"])
  lib_ppxlib.ast(["ppxlib.ast"])
  lib_ppxlib.astlib(["ppxlib.astlib"])
  lib_ppxlib.print_diff(["ppxlib.print_diff"])
  lib_ppxlib.stdppx(["ppxlib.stdppx"])
  lib_ppxlib.traverse_builtins(["ppxlib.traverse_builtins"])
  lib_prettym(["prettym"])
  lib_psq(["psq"])
  lib_ptime(["ptime"])
  lib_ptime.clock(["ptime.clock"])
  lib_ptime.clock.os(["ptime.clock.os"])
  lib_re(["re"])
  lib_re2(["re2"])
  lib_re2.c(["re2.c"])
  lib_regex_parser_intf(["regex_parser_intf"])
  lib_rresult(["rresult"])
  lib_runtime_events(["runtime_events"])
  lib_seq(["seq"])
  lib_sexp_pretty(["sexp_pretty"])
  lib_sexplib(["sexplib"])
  lib_sexplib.unix(["sexplib.unix"])
  lib_sexplib0(["sexplib0"])
  lib_spawn(["spawn"])
  lib_splittable_random(["splittable_random"])
  lib_ssl(["ssl"])
  lib_stdio(["stdio"])
  lib_stdlib-shims(["stdlib-shims"])
  lib_str(["str"])
  lib_stringext(["stringext"])
  lib_thread-table(["thread-table"])
  lib_threads(["threads"])
  lib_threads.posix(["threads.posix"])
  lib_time_now(["time_now"])
  lib_timezone(["timezone"])
  lib_tls(["tls"])
  lib_tls-eio(["tls-eio"])
  lib_typerep(["typerep"])
  lib_unix(["unix"])
  lib_unstrctrd(["unstrctrd"])
  lib_unstrctrd.parser(["unstrctrd.parser"])
  lib_uri(["uri"])
  lib_uri-sexp(["uri-sexp"])
  lib_uri.services(["uri.services"])
  lib_uucp(["uucp"])
  lib_uunf(["uunf"])
  lib_uutf(["uutf"])
  lib_variantslib(["variantslib"])
  lib_webpage_markdown_test(["webpage_markdown_test"])
  lib_x509(["x509"])
  lib_yojson(["yojson"])
  lib_zarith(["zarith"])
  lib_zip(["zip"])
